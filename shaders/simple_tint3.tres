[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://bx3ik7sbs47w3"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dmvcu"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_jije8"]
function = 1

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


	vec3 n_out3p0;
// ColorFunc:3
	{
		vec3 c = vec3(n_out2p0.xyz);
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out3p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(480, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_dmvcu")
nodes/fragment/2/position = Vector2(-160, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorFunc_jije8")
nodes/fragment/3/position = Vector2(220, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0)
